WRSECL		EQU 69
FLUSH		EQU 71

BDOS		EQU 0005H
FN_PRINT	EQU 9
FN_OUT		EQU 2
FN_OPEN_FILE	EQU 15
FN_READ_SEQ	EQU 20
FN_SET_DMA	EQU 26

		COM
		ORG 100H

		LD IX,UNIT

		CALL process_file	; write cold boot loader to track 0

		SET 5,(IX+0)		; set DD bit (only track 0 is SD)

		LD HL,ldr_fcb		; write cpmldr to track 1
		CALL setup_file
		CALL process_file

		LD HL,ccp_fcb		; write ccp to track 2
		CALL setup_file
		CALL process_file

		LD IX,flush_unit	; flush any unwritten data
		EMT FLUSH

		RET

setup_file:	LD (current_fcb),HL
		LD HL,1000H		; reset buffer pointers
		LD (dma_buffer),HL
		LD (address),HL
		INC (IX+1)		; increment track
		LD (IX+2),1		; reset sector to 1 (start of next track)
		LD HL,ok_param		; put new track number in ok string
		INC (HL)
		RET

process_file:	LD C,FN_OPEN_FILE
		LD DE,(current_fcb)
		CALL BDOS
		INC A
		JR Z,not_found

read_loop:	LD C,FN_SET_DMA
		LD DE,(dma_buffer)
		CALL BDOS

		LD C,FN_READ_SEQ
		LD DE,(current_fcb)
		CALL BDOS
		CP 0
		JR NZ,write_loop

		LD HL,sector_count
		INC (hl)
		LD HL,(dma_buffer)
		LD BC,128
		ADD HL,BC
		LD (dma_buffer),HL
		JR read_loop

write_loop:	XOR A
		LD HL,sector_count
		CP (HL)
		JR Z,done
		DEC (HL)

		EMT WRSECL

		INC (IX+2)		; increment sector
		LD HL,(address)
		LD BC,128
		ADD HL,BC
		LD (address),HL

		JR write_loop

not_found:	LD C,FN_PRINT
		LD DE,error_msg
		CALL BDOS
		RET

done:		LD C,FN_PRINT
		LD DE,ok_msg
		CALL BDOS
		RET

cold_fcb:	DEFB 0
		DEFM 'COLDBOOT'
		DEFM 'COM'
		DEFS 21

ldr_fcb:	DEFB 0
		DEFM 'CPMLDR  '
		DEFM 'COM'
		DEFS 21

ccp_fcb:	DEFB 0
		DEFM 'CCP     '
		DEFM 'COM'
		DEFS 21

dma_buffer:	DEFW 1000H
sector_count:	DEFB 0
current_fcb:	DEFW cold_fcb

error_msg:	DEFM 'File not found'
		DEFB 13,'$'

ok_msg:		DEFM 'Track '
ok_param:	DEFM '0 written'
		DEFB 13,'$'

unit:		DEFB 00000001B
track:		DEFB 0
sector:		DEFB 1
address:	DEFW 1000H

flush_unit:	DEFB 00000001B
